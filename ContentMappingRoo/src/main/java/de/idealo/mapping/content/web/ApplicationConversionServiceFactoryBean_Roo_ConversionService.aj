// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.idealo.mapping.content.web;

import de.idealo.mapping.content.domain.Mapping;
import de.idealo.mapping.content.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Mapping, String> ApplicationConversionServiceFactoryBean.getMappingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<de.idealo.mapping.content.domain.Mapping, java.lang.String>() {
            public String convert(Mapping mapping) {
                return new StringBuilder().append(mapping.getId()).append(' ').append(mapping.getSource()).append(' ').append(mapping.getTarget()).append(' ').append(mapping.getCreated()).toString();
            }
        };
    }
    
    public Converter<Long, Mapping> ApplicationConversionServiceFactoryBean.getIdToMappingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, de.idealo.mapping.content.domain.Mapping>() {
            public de.idealo.mapping.content.domain.Mapping convert(java.lang.Long id) {
                return Mapping.findMapping(id);
            }
        };
    }
    
    public Converter<String, Mapping> ApplicationConversionServiceFactoryBean.getStringToMappingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, de.idealo.mapping.content.domain.Mapping>() {
            public de.idealo.mapping.content.domain.Mapping convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Mapping.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getMappingToStringConverter());
        registry.addConverter(getIdToMappingConverter());
        registry.addConverter(getStringToMappingConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
